- name: jenkins_playbook
  hosts: VM
  become: yes
  vars: 
    user_pwd: hieristeinpasswort1234
  tasks:

  - name: install dependencies
    ansible.builtin.apt:
      name: openjdk-17-jre
      state: present

  - name: install jenkins gpg key
    ansible.builtin.apt_key:
      url: https://pkg.jenkins.io/debian/jenkins.io.key
      state: present

  - name: add jenkins repository
    ansible.builtin.apt_repository:
      repo: deb https://pkg.jenkins.io/debian-stable binary/
      state: present

  - name: Install jenkins
    ansible.builtin.apt:
      name: jenkins
      state: latest

  - name: daemon-reload to pick up config changes
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Start jenkins
    ansible.builtin.systemd:
      name: jenkins
      state: started

 - name: read admin pwd
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd

  - name: unlock and add admin user
    jenkins_script:
     script: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('jenkins', '${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setAuthorizationStrategy(strategy)
      instance.save()
     args:
      user_pwd: "{{ admin_user_pass }}"
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: complete setup wizard
    jenkins_script:
     script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: install plugin
    jenkins_plugin:
     name: "{{ item }}"
     state: latest
     url_username: admin
     url_password: "{{ adminpwd.stdout }}"
    with_items: "{{ jenkins_plugins }}"